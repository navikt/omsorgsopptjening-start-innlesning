kind: Application
apiVersion: nais.io/v1alpha1
metadata:
  name: omsorgsopptjening-start-innlesning
  namespace: pensjonopptjening
  labels:
    team: pensjonopptjening
spec:
  kafka:
    pool: nav-dev
  azure:
    sidecar:
      enabled: true
      autoLogin: true
    application:
      enabled: true
      allowAllUsers: false
      claims:
        groups:
          - id: "7ef907b4-ec9f-47dd-ab41-4e54ba32ceb1" #AAD pensjonopptjening testgruppe
  gcp:
    sqlInstances:
      - type: POSTGRES_14
        cascadingDelete: true
        diskAutoresize: true
        pointInTimeRecovery: true
        name: omsorginnlesning
        tier: db-custom-4-15360
        databases:
          - name: omsorginnlesning
            envVarPrefix: DATABASE
  env:
    - name: SPRING_PROFILES_ACTIVE
      value: dev-gcp
    - name: BARNETRYGD_URL
#      value: http://omsorgsarbeid-ba-mock
      value: http://familie-ba-sak.teamfamilie
    - name: BARNETRYGD_API_ID
#      value: dev-gcp.pensjonopptjening.omsorgsarbeid-ba-mock
      value: dev-gcp.teamfamilie.familie-ba-sak
    - name: HJELPESTONAD_URL
      value: https://omsorgsopptjening-hjelpestonad-db-proxy.dev-fss-pub.nais.io
    - name: HJELPESTONAD_API_ID
      value: dev-fss.pensjonopptjening.omsorgsopptjening-hjelpestonad-db-proxy
    - name: OMSORGSOPPTJENING_TOPIC
      value: pensjonopptjening.omsorgsopptjening
    - name: BARNETRYGDMOTTAKERE_TOPIC
      value: teamfamilie.aapen-familie-ba-sak-identer-med-barnetrygd
    - name: BARNETRYGDMOTTAKERE_CONSUMER_GROUP
      value: omsorgsopptjening-start-innlesning
  image: {{ image }}
  ingresses:
    - https://omsorgsopptjening-start-innlesning.intern.dev.nav.no
  accessPolicy:
    outbound:
      external:
        - host: omsorgsopptjening-hjelpestonad-db-proxy.dev-fss-pub.nais.io
      rules:
        - application: omsorgsarbeid-ba-mock
        - application: familie-ba-sak
          namespace: teamfamilie
  liveness:
    path: /actuator/health/liveness
    port: 8080
    initialDelay: 50
  readiness:
    path: /actuator/health/readiness
    port: 8080
    initialDelay: 50
  prometheus:
    enabled: true
    port: "8080"
    path: /actuator/prometheus
  replicas:
    min: 1
    max: 1
  resources:
    limits:
      cpu: "2""
      memory: 4096Mi
    requests:
      cpu: 500m
      memory: 1024Mi